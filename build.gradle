buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://dl.bintray.com/robfletcher/gradle-plugins" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
        classpath 'com.github.fgiannesini.libsass.gradle.plugin:libsass-gradle-plugin:+'
        classpath "com.github.robfletcher:compass-gradle-plugin:+"
    }
}

group 'au.org.azzmosphere'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.github.fgiannesini.libsass.gradle.plugin'
apply plugin: "com.github.robfletcher.compass"

jar {
    baseName = 'gs-actuator-service'
    version =  '0.1.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
}

compass {
    cssDir = file("public/css")
    sassDir = file("src/main/scss")
}

//Relative paths from resources can be used if target directory already exists, otherwise absolute path from project root should be used.
// use compassCompile instead of Sass plugin.
libSassParameters {
    //Type: String Mandatory
    //File path to compile (normally import other scss files)
    //Can be overridden for production task
    inputFilePath = "src/main/scss/pgprog.scss"

    //Type: String Mandatory
    //Compiled file path
    //Can be overridden for production task
    outputFilePath = "public/css/pgprog.css"

    //Directory to watch for continuous compilation
    watchedDirectoryPath = "scss"

    //Type: Boolean Default: false
    //'true' embeds the source map as a data URI
    //Can be overridden for production task
    sourceMapEmbed = true

    //Type: Boolean Default: false
    //'true' enables additional debugging information in the output file as CSS comments
    //Can be overridden for production task
    //sourceComments = false

    //Type: Boolean Default: false
    //'true' values disable the inclusion of source map information in the output file
    //Can be overridden for production task
    //omitSourceMappingURL = false

    //Type: Boolean Default: false
    //'true' includes the contents in the source map information
    //Can be overridden for production task
    //sourceMapContents = false

    //Type: String Default: 'scss'
    //Input syntax 'scss' or 'sass'
    //Can be overridden for production task
    //inputSyntax "scss"

    //Type: Integer Default: 5
    //Used to determine how many digits after the decimal will be allowed. For instance, if you had a decimal number of 1.23456789 and a precision of 5, the result will be 1.23457 in the final CSS.
    //Can be overridden for production task
    //precision 5

    //Type: String
    //Path of source file to generate if not embedded
    //Can be overridden for production task
    //sourceMapFilePath "css/output.css.map"

    //Type: String Default: nested Values: nested, expanded, compact, compressed
    //Determines the output format of the final CSS style.
    //Can be overridden for production task
    //outputStyle "nested"

    //Type: String Default: ""
    //Paths that LibSass can look in to attempt to resolve your @import declarations. When using data, it is recommended that you use this.
    //';' is the path separator for Windows
    //':' is the path separator for Linux
    //Can be overridden for production task
    //includePaths "scss-lib"

    //Type: String
    //Installation folder for bourbon sources
    bourbonInstallationPath "scss"

    //Type: String
    //If a specific version of bourbon is necessary
    //bourbonVersion "4.2.6"

    //Type: String
    //Installation folder for compass sources
    //compassInstallationPath "src/main/resources/scss"

    //Type: String
    //If a specific version of compass is necessary
    //compassVersion "1.0.3"

    //Override parameters for task "compileLibSassProduction"
    libSassProductionParameters {
        outputStyle "compressed"

        outputFilePath = "public/css/pgprog.css"
    }
}
